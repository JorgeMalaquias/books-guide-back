generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  name String
  imageUrl String
  friends Friends[] @relation("firstFriend")
  friends2 Friends[] @relation("secondFriend")
  requestsMade Requests[] @relation("requester")
  requestsReceived Requests[] @relation("requested")
  collection Collections[]
}
model Collections{
  id       Int    @id @default(autoincrement())
  user Users @relation(fields: [userId], references: [id])
  userId Int
  title Titles @relation(fields: [titleId], references: [id])
  titleId Int
}
model Friends{
  id       Int    @id @default(autoincrement())
  user1 Users @relation("firstFriend",fields: [user1Id], references: [id])
  user1Id Int
  user2 Users @relation("secondFriend",fields: [user2Id], references: [id])
  user2Id Int
}
model Requests{
  id       Int    @id @default(autoincrement())
  requester Users @relation("requester",fields: [requesterId], references: [id])
  requesterId Int
  requested Users @relation("requested",fields: [requestedId], references: [id])
  requestedId Int
}

model Titles {
  id       Int    @id @default(autoincrement())
  name String
  imageUrl String
  publisher Publishers @relation(fields: [publisherId], references: [id])
  publisherId Int
  author Authors @relation(fields: [authorId], references: [id])
  authorId Int
  description String
  accesses AccessingsToTitles[]
  collection Collections[]
  createdAt DateTime @default(now())
}

model Publishers{
  id       Int    @id @default(autoincrement())
  name String
  titles Titles[]
}
model Authors{
  id       Int    @id @default(autoincrement())
  name String
  titles Titles[]
}
model AccessingsToTitles{
  id       Int    @id @default(autoincrement())
  title Titles @relation(fields: [titleId], references: [id])
  titleId Int
}